<?xml version="1.0" encoding="UTF-8"?>
<statements>
	<statement id="1">It is important to understad the impact of code reviews on code quality in terms of detection and/or fixes of -
		bugs, post release defects, software security (vulnerabilities), software design (anti-patterns/code smells, TDD effectiveness), and program logic (fixes of conditional statements). </statement>
	<statement id="2">It is important to understand the code review impact on - teams' understanding of the code under review, peer impression in terms of trust, reliability, perception of expertise, and friendship, knowledge dissemination, time and motivation to contribute, and developers' sentiment. </statement>
	<statement id="3">It is important to know the impact of static code analysis, symbolic execution debuggin and gamification elements on the code review process. </statement>
	<statement id="4">It is important to know how code change descriptions, size, commit history cohenrence and/or review particiaption history affect code review process. </statement>
	<statement id="5">It is importnat to evaluate the fitness of code reviews process in different contexts. </statement>
	<statement id="6">It is important to know the relationship between review efficiency and effectiveness, and human factors such as the reviewer's: age and experience, attention span, workload, social interactions, understanding of each other's comments, reviewing patterns and focus (we should here list only the factors that are measured, not the measurement approach, like eye movement), and perception of code quality. </statement>
	<statement id="7">It is important to  know the ifference between core (experienced) and not core reviewers and developers in terms of: review requests amount, frequency and speed, activity, involvement and commitment, likelihood of change request acceptance (conformance to code style increases likelihood), level of agreement between reviewers, career paths, and ability to find vulnerabilities </statement>
	<statement id="8"> It is important to know the effect of organizational factors on code reviews such as: number of involved developers, individual and team motivation, fairness of code review prioritization, and satisfaction of information needs. </statement>
	<statement id="9">Support for any one of the following activities is important - identify the sentiment/attitude in reviews, determine the usefulness of reviews, identify the intention of reviews, estimate the review effort, monitor the review effort, monitor review performance and quality, selection or ordering of code to review, selection of appropriate code reviewers, code change understanding, code review on touch-enabled devices, manage code reviews, and automate code quality assessment.  </statement>
</statements>
